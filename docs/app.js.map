{"version":3,"file":"app.js?id=bf91b62f0afe13a9","mappings":"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","sources":["webpack://nochi3d/./src/App.vue","webpack://nochi3d/./src/models/cameras.js","webpack://nochi3d/./src/models/mesh.js","webpack://nochi3d/./src/models/lights.js","webpack://nochi3d/./src/models/textures.js","webpack://nochi3d/./src/helpers/demo.js","webpack://nochi3d/./src/App.vue?7ccd","webpack://nochi3d/./src/main.js","webpack://nochi3d/webpack/bootstrap","webpack://nochi3d/webpack/runtime/chunk loaded","webpack://nochi3d/webpack/runtime/define property getters","webpack://nochi3d/webpack/runtime/global","webpack://nochi3d/webpack/runtime/hasOwnProperty shorthand","webpack://nochi3d/webpack/runtime/jsonp chunk loading","webpack://nochi3d/webpack/startup"],"sourcesContent":["<template>\n    <canvas class=\"game\" id=\"game\"></canvas>\n</template>\n\n<script>\nimport * as BABYLON from 'babylonjs';\nimport * as cannon from 'cannon';\n\nimport 'babylonjs-loaders';\n\nimport demo from 'helpers/demo';\n\nimport CamerasModel from 'models/cameras';\nimport MeshModel from 'models/mesh';\nimport LightsModel from 'models/lights';\nimport TexturesModel from 'models/textures';\n\nexport default {\n    name: 'App',\n    data() {\n        return {\n            canvas: undefined,\n            crouch: false,\n            engine: undefined,\n            jLock: false,\n            jump: 2,\n            scene: undefined,\n            keys: {}\n        };\n    },\n    mounted() {\n        this.addKeyListeners();\n\n        // Get the canvas DOM element\n        this.canvas = document.getElementById('game');\n\n        // Placate Firefox\n        let gl = this.canvas.getContext('webgl');\n        gl.getParameter(gl.RENDERER);\n\n        // Load the 3D engine\n        this.engine = new BABYLON.Engine(\n            this.canvas,\n            true,\n            {preserveDrawingBuffer: true, stencil: true}\n        );\n\n        // Create a basic BJS Scene object\n        this.scene = new BABYLON.Scene(this.engine);\n\n        this.scene.gravity = new BABYLON.Vector3(0, -1.3, 0);\n        this.scene.collisionsEnabled = true;\n\n        this.scene.enablePhysics(\n            null,\n            new BABYLON.CannonJSPlugin(true, 10, cannon)\n        );\n\n        this.setTextures();\n\n        demo.createScene({\n            scene: this.scene,\n            engine: this.engine,\n            canvas: this.canvas\n        });\n\n        CamerasModel.addPointerLock(this.scene, this.canvas);\n\n        this.scene.registerAfterRender(this.keyboardListener);\n\n        // run the render loop\n        this.engine.runRenderLoop(() => {\n            this.scene.render();\n        });\n\n        // the canvas/window resize event handler\n        window.addEventListener('resize', () => {\n            this.engine.resize();\n        });\n    },\n    methods: {\n        addKeyListeners() {\n            document.addEventListener ('keydown', (e) => {\n                // if (e.keyCode == 87) { this.keys.w = true; }\n                // if (e.keyCode == 65) { this.keys.a = true; }\n                // if (e.keyCode == 83) { this.keys.s = true; }\n                // if (e.keyCode == 68) { this.keys.d = true; }\n                if (e.keyCode == 32) { this.keys.space = true; }\n                if (e.keyCode == 16) { this.keys.shift = true; }\n            });\n\n            document.addEventListener ('keyup', (e) => {\n                // if (e.keyCode == 87) { this.keys.w = false; }\n                // if (e.keyCode == 65) { this.keys.a = false; }\n                // if (e.keyCode == 83) { this.keys.s = false; }\n                // if (e.keyCode == 68) { this.keys.d = false; }\n                if (e.keyCode == 32) { this.keys.space = false; }\n                if (e.keyCode == 16) { this.keys.shift = false; }\n            });\n        },\n        keyboardListener() {\n            if (!this.scene.isReady()) {\n                return;\n            }\n\n            if (this.keys.shift && !this.crouch) {\n                CamerasModel.all.camera.ellipsoid.y = 0.75;\n                this.crouch = true;\n            } else if (!this.keys.shift && this.crouch) {\n                CamerasModel.all.camera.position.y += 1.5;\n                CamerasModel.all.camera.ellipsoid.y = 1.5;\n                this.crouch = false;\n            }\n\n            if (this.jump < 2 && !this.jLock &&\n                CamerasModel.getGroundDistance('camera', this.scene) < 4) {\n                this.jump = 2;\n            }\n\n            if (this.keys.space && !this.jLock && this.jump > 0) {\n                this.jump--;\n                this.jLock = true;\n\n                CamerasModel.jump.setKeys([\n                    {frame: 0, value: CamerasModel.all.camera.position.y},\n                    {frame: 20, value: CamerasModel.all.camera.position.y + 16}\n                ]);\n\n                CamerasModel.all.camera.animations = [CamerasModel.jump];\n\n                this.scene.beginAnimation(CamerasModel.all.camera, 0, 20, false);\n            }\n\n            if (this.jLock && !this.keys.space) {\n                this.jLock = false;\n            }\n        },\n        setTextures() {\n            const files = {\n                ground1: 'assets/mochi_full.jpg',\n                gregg: 'assets/gregg_face.png',\n                leo: 'assets/leo_face.png',\n                mochi: 'assets/mochi_face.jpg',\n                mochi2: 'assets/mochi_face_2.png',\n                nori: 'assets/nori_face.png',\n                nori2: 'assets/nori_full.png',\n                snow: 'assets/snow.png',\n                fenny: 'assets/fenny.png',\n                indy: 'assets/indy.png'\n            };\n\n            Object.keys(files).forEach((name) => {\n                TexturesModel.addTexture({\n                    name: name,\n                    scene: this.scene,\n                    asset: files[name]\n                });\n            });\n        }\n    }\n}\n</script>\n\n<style>\nhtml,\nbody {\n    height: 100%;\n    width: 100%;\n}\n\nhtml {\n    overflow: hidden;\n}\n\nbody {\n    margin: 0;\n}\n\n#app {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    height: 100%;\n    width: 100%;\n}\n\n.game {\n    background-color: #42b983;\n    height: 100%;\n    width: 100%;\n}\n</style>\n","import * as BABYLON from 'babylonjs';\n\nclass Cameras {\n\n    constructor() {\n        this.all = {};\n\n        this.jump = new BABYLON.Animation(\n            'jump', 'position.y', 60,\n            BABYLON.Animation.ANIMATIONTYPE_FLOAT,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n\n        const easingFunction = new BABYLON.CircleEase();\n        easingFunction.setEasingMode(BABYLON.EasingFunction.EASINGMODE_EASEOUT);\n        this.jump.setEasingFunction(easingFunction);\n    }\n\n    addCamera(config) {\n        this.all[config.name] = this.setupCamera(config);\n\n        this.addCameraWASD(config.name);\n    }\n\n    addCameraWASD(name) {\n        this.all[name].keysUp.push(87);\n        this.all[name].keysDown.push(83);\n        this.all[name].keysRight.push(68);\n        this.all[name].keysLeft.push(65);\n    }\n\n    addPointerLock(scene, canvas) {\n        // On click event, request pointer lock\n        scene.onPointerDown = () => {\n            canvas.requestPointerLock =\n                canvas.requestPointerLock ||\n                canvas.msRequestPointerLock ||\n                canvas.mozRequestPointerLock ||\n                canvas.webkitRequestPointerLock;\n\n            if (canvas.requestPointerLock) {\n                canvas.requestPointerLock();\n            }\n        };\n    }\n\n    getGroundDistance(name, scene) {\n        const origin = this.all[name].position;\n        const direction = BABYLON.Vector3.Down();\n        const length = 300;\n        const ray = new BABYLON.Ray(origin, direction, length);\n\n        const hit = scene.pickWithRay(ray);\n\n        return hit.distance;\n    }\n\n    setupCamera(config) {\n        const camera = new BABYLON.UniversalCamera(\n            config.name,\n            config.position || new BABYLON.Vector3(0, 3, 0),\n            config.scene\n        );\n\n        camera.setTarget(new BABYLON.Vector3(0, 10, 0));\n\n        camera.applyGravity = true;\n        camera._needMoveForGravity = true;\n        camera.ellipsoid = new BABYLON.Vector3(1, 1.5, 1);\n        camera.checkCollisions = true;\n        camera.attachControl(config.canvas, true);\n\n        return camera;\n    }\n}\n\nconst cameras = new Cameras();\n\nexport default cameras;\n","import * as BABYLON from 'babylonjs';\n\nclass Mesh {\n\n    constructor() {\n        this.ground = {};\n        this.imported = {};\n        this.sphere = {};\n\n        this.rotateSphere = new BABYLON.Animation(\n            'rotateSphere', 'rotation.y', 10,\n            BABYLON.Animation.ANIMATIONTYPE_FLOAT,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n\n        this.rotateSphere.setKeys([\n            { frame: 0, value: 0 },\n            { frame: 100, value: 2 * Math.PI }\n        ]);\n\n        this.reverseRotateSphere = new BABYLON.Animation(\n            'rotateSphere', 'rotation.y', 10,\n            BABYLON.Animation.ANIMATIONTYPE_FLOAT,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n\n        this.reverseRotateSphere.setKeys([\n            { frame: 0, value: 0 },\n            { frame: 100, value: -2 * Math.PI }\n        ]);\n    }\n\n    addMesh(type, config) {\n        if (type === 'ground') {\n            this[type][config.name] = this.setupGround(config);\n        } else if (type === 'sphere') {\n            this[type][config.name] = this.setupSphere(config);\n        } else if (type === 'imported') {\n            this[type][config.name] = this.setupImported(config);\n        } else if (type === 'tiledground') {\n            this.ground[config.name] = this.setupTiledGround(config);\n        } else {\n            this[type][config.name] = {};\n        }\n    }\n\n    setTexture(type, name, texture) {\n        this[type][name].material = texture;\n    }\n\n    setupGround(config) {\n        // Create a built-in \"ground\" shape; its constructor takes 6 params\n        // name, width, height, subdivision, scene, updatable\n        let grd = BABYLON.Mesh.CreateGround(\n            config.name,\n            config.width || 100,\n            config.height || 100,\n            config.subdivision || 0,\n            config.scene,\n            config.updatable || false\n        );\n\n        if (config.texture) {\n            grd.material = config.texture;\n        }\n\n        grd.checkCollisions = true;\n\n        return grd;\n    }\n\n    setupImported(config) {\n        BABYLON.SceneLoader.ImportMesh(null,\n            config.path, config.file, config.scene, (newMeshes) => {\n            this.imported[config.name] = BABYLON.MeshBuilder.CreateBox(config.name,\n                {size: config.size || 1},\n                this.scene);\n\n            this.imported[config.name].visibility = 0;\n\n            newMeshes.forEach((nm) => {\n                nm.checkCollisions = true;\n                nm.parent = this.imported[config.name];\n            });\n\n            if (config.position) {\n                this.imported[config.name].position = config.position;\n            }\n\n            if (config.rotation) {\n                this.imported[config.name].rotation = config.rotation;\n            }\n\n            if (config.scaling) {\n                this.imported[config.name].scaling = config.scaling;\n            }\n        });\n    }\n\n    setupSphere(config) {\n        const box = BABYLON.MeshBuilder.CreateBox(\n            config.name,\n            {\n                size: config.diameter || 1\n            },\n            config.scene\n        );\n\n        box.position.x = config.x || 0;\n        box.position.y = config.y || config.diameter / 2 || 0;\n        box.position.z = config.z || 0;\n\n        box.checkCollisions = true;\n        box.visibility = 0;\n\n        // Create a built-in \"sphere\" shape; its constructor takes 6 params:\n        // name, segment, diameter, scene, updatable, sideOrientation\n        const s = BABYLON.Mesh.CreateSphere(\n            `${config.name}_inner`,\n            config.segment || 16, // ???\n            config.diameter || 1,\n            config.scene,\n            config.updatable || false,\n            config.sideOrientation || BABYLON.Mesh.FRONTSIDE // ???\n        );\n\n        if (config.texture) {\n            s.material = config.texture;\n        }\n\n        if (config.rotate) {\n            s.animations.push(this.rotateSphere);\n            config.scene.beginAnimation(s, 0, 100, true);\n        } else if (config.reverseRotate) {\n            s.animations.push(this.reverseRotateSphere);\n            config.scene.beginAnimation(s, 0, 100, true);\n        }\n\n        s.parent = box;\n\n        return box;\n    }\n\n    setupTiledGround(config) {\n        const grid = { 'h' : 8, 'w' : 8 };\n\n        const tiledGround = new BABYLON.MeshBuilder.CreateTiledGround(\n            config.name, {xmin: -3, zmin: -3, xmax: 3, zmax: 3, subdivisions: grid}\n        );\n\n        const multimat = new BABYLON.MultiMaterial('multi', config.scene);\n        multimat.subMaterials.push(config.texture);\n\n        tiledGround.material = multimat;\n\n        // Needed variables to set subMeshes\n        const verticesCount = tiledGround.getTotalVertices();\n        const tileIndicesLength = tiledGround.getIndices().length / (grid.w * grid.h);\n\n        // Set subMeshes of the tiled ground\n        tiledGround.subMeshes = [];\n        let base = 0;\n\n        for (let row = 0; row < grid.h; row++) {\n            for (let col = 0; col < grid.w; col++) {\n                tiledGround.subMeshes.push(new BABYLON.SubMesh(\n                    row%2 ^ col%2, 0, verticesCount, base , tileIndicesLength, tiledGround\n                ));\n                base += tileIndicesLength;\n            }\n        }\n\n        tiledGround.checkCollisions = true;\n\n        return tiledGround;\n    }\n}\n\nconst mesh = new Mesh();\n\nexport default mesh;\n","import * as BABYLON from 'babylonjs';\n\nclass Lights {\n\n    constructor() {\n        this.all = {};\n    }\n\n    addLight(config) {\n        this.all[config.name] = this.setupLight(config);\n\n        return this.all[config.name];\n    }\n\n    setupLight(config) {\n        // Create a basic light, aiming 0, 1, 0 - meaning, to the sky\n        return new BABYLON.HemisphericLight(\n            config.name,\n            new BABYLON.Vector3(0, 1, 0),\n            config.scene\n        );\n    }\n}\n\nconst lights = new Lights();\n\nexport default lights;\n","import * as BABYLON from 'babylonjs';\n\nclass Textures {\n\n    constructor() {\n        this.all = {};\n    }\n\n    addTexture(config) {\n        this.all[config.name] = this.setupTexture(config);\n\n        return this.all[config.name];\n    }\n\n    setAsset(texture, config) {\n        texture.diffuseTexture = new BABYLON.Texture(config.asset, config.scene);\n    }\n\n    setupTexture(config) {\n        let txt = new BABYLON.StandardMaterial(this.name, this.scene);\n\n        if (config.asset) {\n            this.setAsset(txt, config);\n        }\n\n        return txt;\n    }\n}\n\nconst textures = new Textures();\n\nexport default textures;\n","import * as BABYLON from 'babylonjs';\n\nimport CamerasModel from 'models/cameras';\nimport MeshModel from 'models/mesh';\nimport LightsModel from 'models/lights';\nimport TexturesModel from 'models/textures';\n\nfunction createScene(data) {\n    LightsModel.addLight({\n        name: 'light1',\n        scene: data.scene\n    });\n\n    MeshModel.addMesh('imported', {\n        name: 'penguin',\n        path: 'assets/',\n        file: 'penguin.glb',\n        scene: data.scene,\n        position: new BABYLON.Vector3(0, 11, 0),\n        rotation: new BABYLON.Vector3(Math.PI/2, Math.PI, 0),\n        scaling: new BABYLON.Vector3(2, 2, 2)\n    });\n\n    MeshModel.addMesh('sphere', {\n        name: 'mochiS',\n        diameter: 12,\n        scene: data.scene,\n        texture: TexturesModel.all.mochi,\n        reverseRotate: true,\n        x: -15\n    });\n\n    MeshModel.addMesh('sphere', {\n        name: 'mochi2S',\n        diameter: 6,\n        scene: data.scene,\n        texture: TexturesModel.all.mochi2,\n        rotate: true,\n        x: -15,\n        y: 12\n    });\n\n    MeshModel.addMesh('sphere', {\n        name: 'noriS',\n        diameter: 10,\n        scene: data.scene,\n        texture: TexturesModel.all.nori,\n        rotate: true,\n        y: 6\n    });\n\n    MeshModel.addMesh('sphere', {\n        name: 'nori2SL',\n        diameter: 50,\n        scene: this.scene,\n        texture: TexturesModel.all.nori2,\n        x: 100,\n        y: 25,\n        z: -100\n    });\n\n    MeshModel.addMesh('sphere', {\n        name: 'greggS',\n        diameter: 8,\n        scene: data.scene,\n        texture: TexturesModel.all.gregg,\n        rotate: true,\n        x: -30,\n        y: 10,\n        z: -28\n    });\n\n    MeshModel.addMesh('sphere', {\n        name: 'leoS',\n        diameter: 8,\n        scene: data.scene,\n        texture: TexturesModel.all.leo,\n        reverseRotate: true,\n        x: 38,\n        y: 8,\n        z: -25\n    });\n\n    MeshModel.addMesh('sphere', {\n        name: 'fennyS',\n        diameter: 8,\n        scene: data.scene,\n        texture: TexturesModel.all.fenny,\n        rotate: true,\n        x: -20,\n        y: 10,\n        z: 28\n    });\n\n    MeshModel.addMesh('sphere', {\n        name: 'indyS',\n        diameter: 8,\n        scene: data.scene,\n        texture: TexturesModel.all.indy,\n        reverseRotate: true,\n        x: -28,\n        y: 12,\n        z: 18\n    });\n\n    MeshModel.addMesh('ground', {\n        name: 'ground1',\n        width: 150,\n        height: 150,\n        scene: this.scene,\n        texture: TexturesModel.all.ground1\n    });\n\n    CamerasModel.addCamera({\n        name: 'camera',\n        position: new BABYLON.Vector3(0, 3, -40),\n        scene: data.scene,\n        canvas: data.canvas\n    });\n}\n\nexport default {createScene};\n","import { render } from \"./App.vue?vue&type=template&id=d3b3fbf4\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=d3b3fbf4&lang=css\"\n\nimport exportComponent from \"/Users/timnoel/nochi3d/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue';\nimport App from './App.vue';\n// import router from './router.js';\n\n// createApp(App).use(router).mount('#app');\ncreateApp(App).mount('#app');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = window[\"webpackChunknochi3d\"] = window[\"webpackChunknochi3d\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(503); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","id","_createElementBlock","Cameras","constructor","this","all","jump","BABYLON","easingFunction","setEasingMode","setEasingFunction","addCamera","config","name","setupCamera","addCameraWASD","keysUp","push","keysDown","keysRight","keysLeft","addPointerLock","scene","canvas","onPointerDown","requestPointerLock","msRequestPointerLock","mozRequestPointerLock","webkitRequestPointerLock","getGroundDistance","origin","position","direction","length","ray","hit","pickWithRay","distance","camera","setTarget","applyGravity","_needMoveForGravity","ellipsoid","checkCollisions","attachControl","cameras","Mesh","ground","imported","sphere","rotateSphere","setKeys","frame","value","Math","PI","reverseRotateSphere","addMesh","type","setupGround","setupSphere","setupImported","setupTiledGround","setTexture","texture","material","grd","width","height","subdivision","updatable","path","file","newMeshes","size","visibility","forEach","nm","parent","rotation","scaling","box","diameter","x","y","z","s","segment","sideOrientation","rotate","animations","beginAnimation","reverseRotate","grid","tiledGround","xmin","zmin","xmax","zmax","subdivisions","multimat","subMaterials","verticesCount","getTotalVertices","tileIndicesLength","getIndices","w","h","subMeshes","base","row","col","mesh","Lights","addLight","setupLight","lights","Textures","addTexture","setupTexture","setAsset","diffuseTexture","asset","txt","textures","createScene","data","LightsModel","MeshModel","TexturesModel","CamerasModel","undefined","crouch","engine","jLock","keys","mounted","addKeyListeners","document","getElementById","gl","getContext","getParameter","RENDERER","preserveDrawingBuffer","stencil","gravity","collisionsEnabled","enablePhysics","cannon","setTextures","demo","registerAfterRender","keyboardListener","runRenderLoop","render","window","addEventListener","resize","methods","e","keyCode","space","shift","isReady","files","ground1","gregg","leo","mochi","mochi2","nori","nori2","snow","fenny","indy","Object","__exports__","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","key","splice","r","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}